 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var route = require('./app/route.js');
var api = require('./app/api.js');

var mongo = require('mongodb');


mongo.MongoClient.connect(process.env.MONGODB_URI || "test", function(err, db) {

  if (err) {
    throw new Error('Database!');
  } else {
    console.log('Successfully connected to MongoDB on port 27017.');
  }
  
  if (!process.env.DISABLE_XORIGIN) {
    app.use(function(req, res, next) {
      var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
      var origin = req.headers.origin || '*';
      if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
           console.log(origin);
           res.setHeader('Access-Control-Allow-Origin', origin);
           res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
      }
      next();
    });
  }

  app.use('/public', express.static(process.cwd() + '/public'));

  route(app, db);
  api(app, db)



  // Respond not found to all the wrong routes
  app.use(function(req, res, next){
    res.status(404);
    res.type('txt').send('Not found');
  });

  // Error Middleware
  app.use(function(err, req, res, next) {
    if(err) {
      res.status(err.status || 500)
        .type('txt')
        .send(err.message || 'SERVER ERROR');
    }  
  })

  app.listen(process.env.PORT, function () {
    console.log('Node.js listening ...');
  });

});